/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "io.freefair.aspectj" version "8.6"
}

apply from: "../../deployment/variables.gradle"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
	api "org.aspectj:aspectjrt:1.9.21.1"
    inpath files("$mendixInstallDir/runtime/bundles/com.mendix.public-api.jar")
    inpath files("$mendixInstallDir/runtime/bundles/org.osgi.osgi.cmpn.jar")
    inpath files("$mendixInstallDir/runtime/bundles/com.mendix.logging-api.jar")
    
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    // implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task copyJar(type: Copy) {
    from 'build/libs/' // 这里是你构建好的JAR文件所在的路径，根据你的实际情况修改
    into '../../userlib' // 这里是你想要复制到的目标目录，根据你的实际情况修改
    include '*.jar'
}

// 在构建任务之后执行复制任务
build.dependsOn(copyJar)
